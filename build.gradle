plugins {
	// spring restdocs
	id "org.asciidoctor.jvm.convert" version "3.3.2"

	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'HeoJin'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

// 쿼리 dsl 생성 경로 명시적으로  지정
def querydslDir = "src/main/generated"

// ./gradlew clean
// ./gradlew compileJava
configurations {
	// spring restdocs
	asciidoctorExt

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// json 직렬화 관련 (LocalDateTime)
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	compileOnly 'org.projectlombok:lombok'
	// 테스트 환경에서 lombok
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// spring restdocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'

//
//	// 운영은 mysql
//	runtimeOnly 'com.mysql:mysql-connector-j'

	// 로컬 개발 환경
	implementation 'com.h2database:h2'

	// 테스트만 h2
	testImplementation 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// QuueryDSL 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// p6spy
	// 운영 단계에서 제외하기
//	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
}

// QueryDSL QClass 생성 설정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// 소스 세트에 QueryDSL QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

// clean 작업 시 생성된 QClass 삭제
clean {
	delete file(querydslDir)
}

// spring rest docs -> ext, test, asciidoctor
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

// spring restdocs
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}