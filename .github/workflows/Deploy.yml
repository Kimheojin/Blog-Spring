name: Deploy onpress server
on:
  push:
    branches:
      - Deploy
  pull_request:
    branches:
      - Deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v3

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.DB_NAME }}" ] || [ -z "${{ secrets.DB_USERNAME }}" ] || [ -z "${{ secrets.DB_PASSWORD }}" ]; then
            echo "Required secrets are missing"
            exit 1
          fi
<<<<<<< HEAD
          
          if [ -n "${{ secrets.CLOUDINARY_CLOUD_NAME }}" ]; then
            echo "CLOUDINARY_CLOUD_NAME is set ✓"
          else
            echo "CLOUDINARY_CLOUD_NAME is not set ✗"
          fi
          
          if [ -n "${{ secrets.CLOUDINARY_API_KEY }}" ]; then
            echo "CLOUDINARY_API_KEY is set ✓"
          else
            echo "CLOUDINARY_API_KEY is not set ✗"
          fi
          
          if [ -n "${{ secrets.CLOUDINARY_API_SECRET }}" ]; then
            echo "CLOUDINARY_API_SECRET is set ✓"
          else
            echo "CLOUDINARY_API_SECRET is not set ✗"
          fi
=======
          echo "All secrets are configured"
>>>>>>> main

      - name: Stop existing container
        run: |
          docker-compose down blog || true

      - name: Deploy with Docker Compose
        env:
<<<<<<< HEAD
          DB_URL: jdbc:mysql://mysql-container:3306/${{ secrets.DB_NAME }}?useSSL=false&allowPublicKeyRetrieval=true
          DB_USER: ${{ secrets.DB_USERNAME }}
          DB_PASS: ${{ secrets.DB_PASSWORD }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        run: |
          docker run -d -p 8080:8080 \
            -e SPRING_DATASOURCE_URL="$DB_URL" \
            -e SPRING_DATASOURCE_USERNAME="$DB_USER" \
            -e SPRING_DATASOURCE_PASSWORD="$DB_PASS" \
            -e CLOUDINARY_CLOUD_NAME="$CLOUDINARY_CLOUD_NAME" \
            -e CLOUDINARY_API_KEY="$CLOUDINARY_API_KEY" \
            -e CLOUDINARY_API_SECRET="$CLOUDINARY_API_SECRET" \
            -e TZ=Asia/Seoul \
            -e JAVA_OPTS="-Duser.timezone=Asia/Seoul" \
            -v /etc/timezone:/etc/timezone:ro \
            -v /etc/localtime:/etc/localtime:ro \
            --network blog-network \
            --name blog blog:latest
          docker network connect my-network blog
=======
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          docker-compose up -d --build

      - name: Verify deployment
        run: |
          echo "=== Container Status ==="
          docker-compose ps
          
          echo "=== Application Logs ==="
          docker-compose logs --tail=20 blog
          
          echo "=== Health Check ==="
          sleep 15
          if curl -f http://localhost:8080/actuator/health 2>/dev/null; then
            echo "Deployment successful"
          else
            echo "Health check failed"
            docker-compose logs blog
            exit 1
          fi

      - name: Cleanup
        if: always()
        run: |
          docker image prune -f
>>>>>>> main
