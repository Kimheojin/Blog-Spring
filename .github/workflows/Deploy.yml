name: Deploy onpress server (Docker Compose version v2.38.1)
on:
  push:
    branches:
      - Deploy
  pull_request:
    branches:
      - Deploy
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, Linux, X64]
    steps:
      - uses: actions/checkout@v3

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.DB_NAME }}" ] || [ -z "${{ secrets.DB_USERNAME }}" ] || [ -z "${{ secrets.DB_PASSWORD }}" ]; then
            echo "Required database secrets are missing"
            exit 1
          fi
          echo "Database secrets are configured"
          
          if [ -n "${{ secrets.CLOUDINARY_CLOUD_NAME }}" ]; then
            echo "CLOUDINARY_CLOUD_NAME is set"
          else
            echo "CLOUDINARY_CLOUD_NAME is not set"
          fi
          
          if [ -n "${{ secrets.CLOUDINARY_API_KEY }}" ]; then
            echo "CLOUDINARY_API_KEY is set"
          else
            echo "CLOUDINARY_API_KEY is not set"
          fi
          
          if [ -n "${{ secrets.CLOUDINARY_API_SECRET }}" ]; then
            echo "CLOUDINARY_API_SECRET is set"
          else
            echo "CLOUDINARY_API_SECRET is not set"
          fi

      - name: Stop and remove existing container
        run: |
          docker compose down blog || true  # V2 명령어

      - name: Setup network
        run: |
          docker network inspect blog-network >/dev/null 2>&1 || docker network create blog-network
          if ! docker network inspect blog-network | grep -q "mysql-container"; then
            docker network connect blog-network mysql-container || echo "Failed to connect mysql-container to network"
          fi

      - name: Deploy with Docker Compose
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        run: |
          docker compose up -d --build